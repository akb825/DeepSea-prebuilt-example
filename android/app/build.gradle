apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    ndkVersion "21.3.6528147"
    defaultConfig {
        applicationId "com.akb825.deepsea.prebuilt"
        minSdkVersion 18
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            ndk {
                abiFilters 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    externalNativeBuild {
        cmake {
            path "${projectDir}/../../CMakeLists.txt"
        }
    }
    // Only include libraries that aren't referenced directly in CMake.
    task copyArm32Libraries(type: Copy) {
        from ("${projectDir}/../../install/android-armeabi-v7a/lib") {
            include "libhidapi.so"
        }
        into "${projectDir}/src/main/jniLibs/armeabi-v7a"
    }
    task copyArm64Libraries(type: Copy) {
        from ("${projectDir}/../../install/android-arm64-v8a/lib") {
            include "libhidapi.so"
        }
        into "${projectDir}/src/main/jniLibs/arm64-v8a"
    }
    task copyX86Libraries(type: Copy) {
        from ("${projectDir}/../../install/android-x86/lib") {
            include "libhidapi.so"
        }
        into "${projectDir}/src/main/jniLibs/x86"
    }
    task copyX86_64Libraries(type: Copy) {
        from ("${projectDir}/../../install/android-x86_64/lib") {
            include "libhidapi.so"
        }
        into "${projectDir}/src/main/jniLibs/x86_64"
    }
    flavorDimensions "tester"
    productFlavors {
        TestVectorDraw {
            externalNativeBuild {
                cmake {
                    targets "TestVectorDrawApp"
                }
            }
            dimension "tester"

            applicationIdSuffix ".vectordraw"
            versionNameSuffix "-TestVectorDraw"
            resValue "string", "app_name", "TestVectorDraw"
        }
        TestScene {
            externalNativeBuild {
                cmake {
                    targets "TestSceneApp"
                }
            }
            dimension "tester"

            applicationIdSuffix ".scene"
            versionNameSuffix "-TestScene"
            resValue "string", "app_name", "TestScene"
        }
    }
}

preBuild.dependsOn(copyArm32Libraries)
preBuild.dependsOn(copyArm64Libraries)
preBuild.dependsOn(copyX86Libraries)
preBuild.dependsOn(copyX86_64Libraries)

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
