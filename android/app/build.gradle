apply plugin: 'com.android.application'

android {
    compileSdk 34
    ndkVersion "27.2.12479018"
    defaultConfig {
        applicationId "com.akb825.deepsea.prebuilt"
        minSdkVersion 24
        targetSdkVersion 34
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        externalNativeBuild {
            ndk {
                abiFilters 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    externalNativeBuild {
        cmake {
            path "${projectDir}/../../CMakeLists.txt"
        }
    }
    // Only include libraries that aren't referenced directly in CMake.
    tasks.register('copyArm32Libraries', Copy) {
        from("${projectDir}/../../install/android-armeabi-v7a/lib") {
            include "libSDL2.so"
        }
        into "${projectDir}/src/main/jniLibs/armeabi-v7a"
    }
    tasks.register('copyArm64Libraries', Copy) {
        from("${projectDir}/../../install/android-arm64-v8a/lib") {
            include "libSDL2.so"
        }
        into "${projectDir}/src/main/jniLibs/arm64-v8a"
    }
    tasks.register('copyX86Libraries', Copy) {
        from("${projectDir}/../../install/android-x86/lib") {
            include "libSDL2.so"
        }
        into "${projectDir}/src/main/jniLibs/x86"
    }
    tasks.register('copyX86_64Libraries', Copy) {
        from("${projectDir}/../../install/android-x86_64/lib") {
            include "libSDL2.so"
        }
        into "${projectDir}/src/main/jniLibs/x86_64"
    }
    flavorDimensions += "tester"
    productFlavors {
        TestVectorDraw {
            externalNativeBuild {
                cmake {
                    targets "TestVectorDrawApp"
                    arguments "-DDEEPSEA_ANDROID_ASSETS_DIR=src/TestVectorDraw/assets"
                }
            }
            dimension "tester"

            applicationIdSuffix ".vectordraw"
            versionNameSuffix "-TestVectorDraw"
            resValue "string", "app_name", "TestVectorDraw"
            resValue "string", "main_lib_name", "TestVectorDrawApp"
        }
        TestScene {
            externalNativeBuild {
                cmake {
                    targets "TestSceneApp"
                    arguments "-DDEEPSEA_ANDROID_ASSETS_DIR=src/TestSceneApp/assets"
                }
            }
            dimension "tester"

            applicationIdSuffix ".scene"
            versionNameSuffix "-TestScene"
            resValue "string", "app_name", "TestScene"
            resValue "string", "main_lib_name", "TestSceneApp"
        }
    }
    namespace 'com.akb825.deepsea'
}

preBuild.dependsOn(copyArm32Libraries)
preBuild.dependsOn(copyArm64Libraries)
preBuild.dependsOn(copyX86Libraries)
preBuild.dependsOn(copyX86_64Libraries)

dependencies {
    implementation 'androidx.appcompat:appcompat:1.7.0'
}

configurations.implementation {
    exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk8'
}
